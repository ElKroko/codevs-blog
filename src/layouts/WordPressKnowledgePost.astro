---
import BaseHead from '../components/BaseHead.astro';
import Header from '../components/Header.astro';
import Footer from '../components/Footer.astro';
import FormattedDate from '../components/FormattedDate.astro';
import type { WordPressKnowledgePost } from '../lib/wp-knowledge';
import { wpKnowledgeService } from '../lib/wp-knowledge';

interface Props {
	post: WordPressKnowledgePost;
}

const { post } = Astro.props;

// Obtener informaci√≥n de categor√≠a y funciones helper
const categoryInfo = wpKnowledgeService.getCategoryInfo(post.category_slug);
const getAttachmentIcon = wpKnowledgeService.getAttachmentIcon;
const getRankingStars = wpKnowledgeService.getRankingStars;
---

<html lang="es">
	<head>
		<BaseHead title={post.title.rendered} description={post.excerpt.rendered.replace(/<[^>]*>/g, '')} />
	</head>

	<body class="bg-white dark:bg-gray-900 text-gray-900 dark:text-white min-h-screen">
		<Header />
		<main class="w-full">
			<article>
				{post.hero_image_url && (
					<div class="w-full mb-8">
						<img 
							width={1020} 
							height={510} 
							src={post.hero_image_url} 
							alt={post.title.rendered}
							class="block mx-auto rounded-xl shadow-2xl max-w-full h-auto"
						/>
					</div>
				)}
				
				<div class="max-w-4xl mx-auto px-4 py-8">
					<!-- Header Section -->
					<div class="text-center mb-8 border-b border-gray-200 dark:border-gray-700 pb-8">
						<!-- Category and Meta Info -->
						<div class="flex flex-wrap items-center justify-center gap-4 mb-6">
							<div class={`px-3 py-1 rounded-full text-sm font-medium ${categoryInfo.color}`}>
								{categoryInfo.icon} {post.category_slug.charAt(0).toUpperCase() + post.category_slug.slice(1).replace('-', ' ')}
							</div>
							<div class="text-gray-600 dark:text-gray-400 text-sm">
								<FormattedDate date={new Date(post.date)} />
							</div>
							{post.reading_time && (
								<div class="text-gray-600 dark:text-gray-400 text-sm">
									‚è±Ô∏è {post.reading_time}
								</div>
							)}
						</div>

						<!-- Title and Ranking -->
						<h1 class="text-4xl font-bold mb-4 gradient-text">
							{post.title.rendered}
						</h1>
						
						<div class="flex items-center justify-center gap-2 mb-4">
							<span class="text-lg">{getRankingStars(post.ranking)}</span>
							<span class="text-sm text-gray-600 dark:text-gray-400">
								Calidad: {post.ranking}/5
							</span>
						</div>

						<!-- Author Info -->
						{post.custom_author.name && (
							<div class="flex items-center justify-center gap-3 mb-4">
								{post.custom_author.avatar && (
									<img 
										src={post.custom_author.avatar} 
										alt={post.custom_author.name}
										class="w-10 h-10 rounded-full"
									/>
								)}
								<div class="text-left">
									<div class="font-medium text-gray-900 dark:text-gray-100">
										{post.custom_author.name}
									</div>
									{post.custom_author.bio && (
										<div class="text-sm text-gray-600 dark:text-gray-400">
											{post.custom_author.bio}
										</div>
									)}
								</div>
							</div>
						)}

						{post.modified !== post.date && (
							<div class="text-sm text-gray-600 dark:text-gray-400 italic">
								√öltima actualizaci√≥n: <FormattedDate date={new Date(post.modified)} />
							</div>
						)}
					</div>

					<!-- Excerpt -->
					{post.excerpt.rendered && (
						<div class="bg-primary-50 dark:bg-primary-900/20 rounded-lg p-6 mb-8">
							<h2 class="text-lg font-semibold mb-3 text-primary-900 dark:text-primary-100">
								üìù Resumen
							</h2>
							<div class="text-primary-800 dark:text-primary-200" set:html={post.excerpt.rendered} />
						</div>
					)}

					<!-- Prerequisites and Objectives -->
					{(post.prerequisites.length > 0 || post.objectives.length > 0) && (
						<div class="grid md:grid-cols-2 gap-6 mb-8">
							{post.prerequisites.length > 0 && (
								<div class="bg-amber-50 dark:bg-amber-900/20 rounded-lg p-6">
									<h3 class="text-lg font-semibold mb-3 text-amber-900 dark:text-amber-100 flex items-center gap-2">
										üìö Prerrequisitos
									</h3>
									<ul class="space-y-2">
										{post.prerequisites.map((prereq) => (
											<li class="flex items-start gap-2 text-amber-800 dark:text-amber-200">
												<span class="text-amber-600 dark:text-amber-400 mt-1">‚Ä¢</span>
												{prereq}
											</li>
										))}
									</ul>
								</div>
							)}

							{post.objectives.length > 0 && (
								<div class="bg-green-50 dark:bg-green-900/20 rounded-lg p-6">
									<h3 class="text-lg font-semibold mb-3 text-green-900 dark:text-green-100 flex items-center gap-2">
										üéØ Objetivos de Aprendizaje
									</h3>
									<ul class="space-y-2">
										{post.objectives.map((objective) => (
											<li class="flex items-start gap-2 text-green-800 dark:text-green-200">
												<span class="text-green-600 dark:text-green-400 mt-1">‚Ä¢</span>
												{objective}
											</li>
										))}
									</ul>
								</div>
							)}
						</div>
					)}

					<!-- Attachments -->
					{post.attachments.length > 0 && (
						<div class="mb-8">
							<h3 class="text-xl font-semibold mb-4 text-gray-900 dark:text-gray-100 flex items-center gap-2">
								üìé Archivos y Recursos
							</h3>
							<div class="grid gap-3 md:grid-cols-2">
								{post.attachments.map((attachment) => (
									<a 
										href={attachment.url} 
										target="_blank"
										class="flex items-center gap-3 p-4 bg-gray-50 dark:bg-gray-800 rounded-lg border border-gray-200 dark:border-gray-700 hover:bg-gray-100 dark:hover:bg-gray-700 transition-colors duration-200"
									>
										<div class="w-10 h-10 flex items-center justify-center bg-primary-100 dark:bg-primary-900/30 rounded text-primary-600 dark:text-primary-400 text-xl">
											{getAttachmentIcon(attachment.type)}
										</div>
										<div class="flex-1">
											<div class="font-medium text-gray-900 dark:text-gray-100">
												{attachment.title}
											</div>
											{attachment.description && (
												<div class="text-sm text-gray-600 dark:text-gray-400">
													{attachment.description}
												</div>
											)}
											<div class="text-xs text-gray-500 dark:text-gray-500">
												{attachment.size}
											</div>
										</div>
										<svg class="w-4 h-4 text-gray-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
											<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M10 6H6a2 2 0 00-2 2v10a2 2 0 002 2h10a2 2 0 002-2v-4M14 4h6m0 0v6m0-6L10 14"></path>
										</svg>
									</a>
								))}
							</div>
						</div>
					)}

					<!-- Content -->
					<div class="prose prose-lg dark:prose-invert max-w-none mb-8">
						<div class="prose-headings:text-gray-900 dark:prose-headings:text-white prose-p:text-gray-700 dark:prose-p:text-gray-300 prose-a:text-accent-600 dark:prose-a:text-accent-400 prose-strong:text-gray-900 dark:prose-strong:text-white prose-code:text-accent-700 dark:prose-code:text-accent-300 prose-pre:bg-gray-100 dark:prose-pre:bg-gray-900 prose-blockquote:border-l-primary-500" 
							 set:html={post.content.rendered} />
					</div>

					<!-- Resources -->
					{post.resources.length > 0 && (
						<div class="mb-8">
							<h3 class="text-xl font-semibold mb-4 text-gray-900 dark:text-gray-100 flex items-center gap-2">
								üîó Recursos Adicionales
							</h3>
							<div class="grid gap-3">
								{post.resources.map((resource) => (
									<a 
										href={resource.url} 
										target="_blank"
										class="flex items-center gap-3 p-3 bg-blue-50 dark:bg-blue-900/20 rounded-lg border border-blue-200 dark:border-blue-800 hover:bg-blue-100 dark:hover:bg-blue-900/30 transition-colors duration-200"
									>
										<div class="w-8 h-8 flex items-center justify-center bg-blue-100 dark:bg-blue-900/50 rounded text-blue-600 dark:text-blue-400">
											{resource.type === 'documentation' ? 'üìö' : 
											 resource.type === 'tutorial' ? 'üéì' :
											 resource.type === 'repository' ? 'üíª' :
											 resource.type === 'video' ? 'üé•' :
											 resource.type === 'article' ? 'üì∞' :
											 resource.type === 'tool' ? 'üõ†Ô∏è' : 'üîó'}
										</div>
										<div class="flex-1">
											<div class="font-medium text-blue-900 dark:text-blue-100">
												{resource.title}
											</div>
											<div class="text-sm text-blue-700 dark:text-blue-300 capitalize">
												{resource.type.replace('-', ' ')}
											</div>
										</div>
										<svg class="w-4 h-4 text-blue-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
											<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M10 6H6a2 2 0 00-2 2v10a2 2 0 002-2v-4M14 4h6m0 0v6m0-6L10 14"></path>
										</svg>
									</a>
								))}
							</div>
						</div>
					)}

					<!-- Tags -->
					{post.tags_list.length > 0 && (
						<div class="mb-8">
							<h3 class="text-lg font-semibold mb-3 text-gray-900 dark:text-gray-100">
								üè∑Ô∏è Tags
							</h3>
							<div class="flex flex-wrap gap-2">
								{post.tags_list.map((tag) => (
									<span class="px-3 py-1 bg-gray-100 dark:bg-gray-800 text-gray-700 dark:text-gray-300 rounded-full text-sm">
										#{tag}
									</span>
								))}
							</div>
						</div>
					)}

					<!-- Navigation -->
					<div class="border-t border-gray-200 dark:border-gray-700 pt-8">
						<div class="flex items-center justify-between">
							<a 
								href="/knowledge-base"
								class="inline-flex items-center gap-2 text-primary-600 dark:text-primary-400 hover:text-primary-700 dark:hover:text-primary-300 transition-colors duration-200"
							>
								<svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
									<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 19l-7-7 7-7"></path>
								</svg>
								Volver a la Base de Conocimientos
							</a>
							
							<div class="flex items-center gap-3">
								<span class="text-sm text-gray-600 dark:text-gray-400">Compartir:</span>
								<button 
									onclick="navigator.share ? navigator.share({title: document.title, url: window.location.href}) : navigator.clipboard.writeText(window.location.href)"
									class="p-2 text-gray-600 dark:text-gray-400 hover:text-primary-600 dark:hover:text-primary-400 transition-colors duration-200"
									title="Compartir"
								>
									üîó
								</button>
							</div>
						</div>
					</div>
				</div>
			</article>
		</main>
		<Footer />
	</body>
</html>
