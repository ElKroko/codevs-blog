#!/usr/bin/env node

/**
 * üîÑ CODEVS QUICK DEPLOY - Despliegue R√°pido
 * 
 * Script para despliegues r√°pidos de cambios menores
 * Optimizado para cambios frecuentes durante desarrollo
 */

import fs from 'fs';
import { exec } from 'child_process';
import { promisify } from 'util';

const execAsync = promisify(exec);

class QuickDeploy {
    async run() {
        console.log('‚ö° CODEVS Quick Deploy\n');
        
        try {
            // 1. Quick build
            console.log('üèóÔ∏è  Building...');
            await execAsync('npm run build');
            console.log('‚úÖ Build completado');
            
            // 2. Crear zip con timestamp
            const timestamp = new Date().toISOString().slice(0, 16).replace(/[T:]/g, '-');
            const zipName = `quick-deploy-${timestamp}.zip`;
            
            console.log('üì¶ Creando paquete...');
            await execAsync(`powershell Compress-Archive -Path dist\\* -DestinationPath ${zipName} -Force`);
            console.log(`‚úÖ Paquete creado: ${zipName}`);
            
            // 3. Test API
            console.log('üß™ Probando API...');
            const fetch = (await import('node-fetch')).default;
            const response = await fetch('https://cms.kroko.cl/wp-json/wp/v2/posts?per_page=1');
            
            if (response.ok) {
                console.log('‚úÖ API funcionando');
            } else {
                console.log('‚ö†Ô∏è  API con problemas');
            }
            
            // 4. Instrucciones r√°pidas
            console.log('\nüì§ QUICK UPLOAD:');
            console.log(`1. Sube ${zipName} a cPanel`);
            console.log('2. Extrae en public_html/codevs/');
            console.log('3. Prueba: https://codevs.kroko.cl');
            console.log('\n‚ö° Listo para subir!');
            
        } catch (error) {
            console.log(`‚ùå Error: ${error.message}`);
        }
    }
}

new QuickDeploy().run();
