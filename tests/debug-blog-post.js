#!/usr/bin/env node

/**
 * üîç CODEVS BLOG POST DEBUGGER
 * 
 * Script para diagnosticar por qu√© no aparece un blog post espec√≠fico
 */

import { performance } from 'perf_hooks';

class BlogPostDebugger {
    async debug() {
        console.log('üîç CODEVS - Blog Post Debugger');
        console.log('==============================\n');

        await this.checkWordPressAPI();
        await this.checkKnowledgeBaseAPI();
        await this.checkCategories();
        await this.searchRecentPosts();
        
        console.log('\nüìã Diagn√≥stico completado');
    }

    async checkWordPressAPI() {
        console.log('üì° Verificando WordPress API...');
          try {
            // 1. Test basic API
            const response = await fetch('https://cms.kroko.cl/wp-json/wp/v2/posts?per_page=10&orderby=date&order=desc');
            
            if (!response.ok) {
                console.log(`‚ùå WordPress API error: ${response.status}`);
                return;
            }
            
            const posts = await response.json();
            console.log(`‚úÖ WordPress API OK - ${posts.length} posts encontrados`);
            
            // 2. Buscar posts recientes (√∫ltimos 3 d√≠as)
            const recentPosts = posts.filter(post => {
                const postDate = new Date(post.date);
                const threeDaysAgo = new Date();
                threeDaysAgo.setDate(threeDaysAgo.getDate() - 3);
                return postDate > threeDaysAgo;
            });
            
            console.log(`üìÖ Posts recientes (√∫ltimos 3 d√≠as): ${recentPosts.length}`);
            
            if (recentPosts.length > 0) {
                console.log('\nüìù Posts recientes encontrados:');
                recentPosts.forEach((post, index) => {
                    console.log(`   ${index + 1}. "${post.title.rendered}"`);
                    console.log(`      üìÖ Fecha: ${new Date(post.date).toLocaleString()}`);
                    console.log(`      üîó Slug: ${post.slug}`);
                    console.log(`      üìä Status: ${post.status}`);
                    console.log(`      üè∑Ô∏è  Categor√≠as: ${post.categories ? post.categories.join(', ') : 'Sin categor√≠as'}`);
                    console.log('');
                });
            } else {
                console.log('‚ö†Ô∏è  No hay posts recientes en los √∫ltimos 3 d√≠as');
            }
            
        } catch (error) {
            console.log(`‚ùå Error conectando con WordPress: ${error.message}`);
        }
    }

    async checkKnowledgeBaseAPI() {
        console.log('\nüß† Verificando Knowledge Base API...');
          try {
            const response = await fetch('https://cms.kroko.cl/wp-json/wp/v2/knowledge-base?per_page=10&orderby=date&order=desc');
            
            if (response.status === 404) {
                console.log('‚ö†Ô∏è  Knowledge Base custom post type no encontrado (normal si no hay entradas)');
                return;
            }
            
            if (!response.ok) {
                console.log(`‚ùå Knowledge Base API error: ${response.status}`);
                return;
            }
            
            const kbPosts = await response.json();
            console.log(`‚úÖ Knowledge Base API OK - ${kbPosts.length} entradas encontradas`);
            
            if (kbPosts.length > 0) {
                console.log('\nüìö Knowledge Base entries:');
                kbPosts.forEach((post, index) => {
                    console.log(`   ${index + 1}. "${post.title.rendered}"`);
                    console.log(`      üìÖ Fecha: ${new Date(post.date).toLocaleString()}`);
                    console.log(`      üîó Slug: ${post.slug}`);
                    console.log(`      üìä Status: ${post.status}`);
                    console.log('');
                });
            }
            
        } catch (error) {
            console.log(`‚ùå Error en Knowledge Base API: ${error.message}`);
        }
    }

    async checkCategories() {
        console.log('\nüè∑Ô∏è  Verificando categor√≠as...');
          try {
            const response = await fetch('https://cms.kroko.cl/wp-json/wp/v2/categories');
            
            if (!response.ok) {
                console.log(`‚ùå Categories API error: ${response.status}`);
                return;
            }
            
            const categories = await response.json();
            console.log(`‚úÖ Categor√≠as encontradas: ${categories.length}`);
            
            // Buscar categor√≠a knowledge-base espec√≠ficamente
            const kbCategory = categories.find(cat => 
                cat.slug === 'knowledge-base' || 
                cat.name.toLowerCase().includes('knowledge')
            );
            
            if (kbCategory) {
                console.log(`üìö Categor√≠a Knowledge Base encontrada:`);
                console.log(`   ID: ${kbCategory.id}`);
                console.log(`   Nombre: ${kbCategory.name}`);
                console.log(`   Slug: ${kbCategory.slug}`);
                console.log(`   Posts: ${kbCategory.count}`);
                
                // Buscar posts en esta categor√≠a
                await this.checkPostsInCategory(kbCategory.id);
            } else {
                console.log('‚ö†Ô∏è  Categor√≠a "knowledge-base" no encontrada');
                console.log('\nüìã Categor√≠as disponibles:');
                categories.forEach(cat => {
                    console.log(`   - ${cat.name} (${cat.slug}) - ${cat.count} posts`);
                });
            }
            
        } catch (error) {
            console.log(`‚ùå Error verificando categor√≠as: ${error.message}`);
        }
    }

    async checkPostsInCategory(categoryId) {
        console.log(`\nüîç Buscando posts en categor√≠a ID ${categoryId}...`);
          try {
            const response = await fetch(`https://cms.kroko.cl/wp-json/wp/v2/posts?categories=${categoryId}&per_page=10&orderby=date&order=desc`);
            
            if (!response.ok) {
                console.log(`‚ùå Error buscando posts en categor√≠a: ${response.status}`);
                return;
            }
            
            const posts = await response.json();
            console.log(`üìä Posts en categor√≠a Knowledge Base: ${posts.length}`);
            
            if (posts.length > 0) {
                console.log('\nüìù Posts en Knowledge Base:');
                posts.forEach((post, index) => {
                    console.log(`   ${index + 1}. "${post.title.rendered}"`);
                    console.log(`      üìÖ Fecha: ${new Date(post.date).toLocaleString()}`);
                    console.log(`      üîó Slug: ${post.slug}`);
                    console.log(`      üìä Status: ${post.status}`);
                    console.log('');
                });
            }
            
        } catch (error) {
            console.log(`‚ùå Error buscando posts en categor√≠a: ${error.message}`);
        }
    }

    async searchRecentPosts() {
        console.log('\nüîé Buscando tu blog post sobre Astro + WordPress...');
          try {
            // Buscar por t√©rminos clave
            const searchTerms = ['astro', 'wordpress', 'headless', 'produccion', 'deploy'];
            
            for (const term of searchTerms) {
                const response = await fetch(`https://cms.kroko.cl/wp-json/wp/v2/posts?search=${term}&per_page=5`);
                
                if (response.ok) {
                    const results = await response.json();
                    if (results.length > 0) {
                        console.log(`üîç Resultados para "${term}": ${results.length} posts`);
                        results.forEach(post => {
                            console.log(`   - "${post.title.rendered}" (${post.slug})`);
                        });
                    }
                }
            }
            
        } catch (error) {
            console.log(`‚ùå Error en b√∫squeda: ${error.message}`);
        }
    }
}

// Ejecutar debugger
new BlogPostDebugger().debug().catch(console.error);
